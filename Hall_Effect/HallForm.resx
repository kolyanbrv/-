<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0kNym9idi9oAAAAASUVORK5CYII=
</value>
  </data>
</root>